{
  "stats": {
    "suites": 7,
    "tests": 15,
    "passes": 13,
    "pending": 0,
    "failures": 2,
    "testsRegistered": 15,
    "passPercent": 86.66666666666667,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-05-12T07:51:43.526Z",
    "end": "2023-05-12T07:53:21.237Z",
    "duration": 97711
  },
  "results": [
    {
      "uuid": "c5bb9964-8c92-4be6-88bc-241e0a419f47",
      "title": "",
      "fullFile": "cypress\\tests\\components\\FooterTest.js",
      "file": "cypress\\tests\\components\\FooterTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b05e1f6a-ba8d-4638-af47-db54a1efe250",
          "title": "Footer Component Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test for about us column",
              "fullTitle": "Footer Component Test Test for about us column",
              "timedOut": null,
              "duration": 2387,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedAboutUsData = {\n  header: \"About Us\",\n  desc: \"We believe performance needs to be validated at every stage of the software development cycle and our open source compatible, massively scalable platform makes that a reality.\"\n};\nfooterComp.getAboutUsData().then(actualAboutUsData => {\n  cy.wrap('').then(() => {\n    expect(actualAboutUsData).to.eql(expectedAboutUsData);\n  });\n});",
              "err": {},
              "uuid": "4466ead7-a6d3-4921-915e-946b9f3188fb",
              "parentUUID": "b05e1f6a-ba8d-4638-af47-db54a1efe250",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test for contact us column",
              "fullTitle": "Footer Component Test Test for contact us column",
              "timedOut": null,
              "duration": 893,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedContactUsData = {\n  header: \"Get in Touch\",\n  address: \"2390 El Camino\",\n  phone: \"+440 123456\",\n  email: \"demo@blazemeter.com\"\n};\nfooterComp.getContactUsData().then(contactUsData => {\n  cy.log(JSON.stringify(contactUsData));\n  cy.wrap('').then(() => {\n    expect(contactUsData.header).to.equal(expectedContactUsData.header);\n    expect(contactUsData.desc).to.contains(expectedContactUsData.address);\n    expect(contactUsData.desc).to.contains(expectedContactUsData.phone);\n    expect(contactUsData.desc).to.contains(expectedContactUsData.email);\n  });\n});",
              "err": {},
              "uuid": "7a833d6f-0824-4f0e-b710-6de96bfe8f9d",
              "parentUUID": "b05e1f6a-ba8d-4638-af47-db54a1efe250",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4466ead7-a6d3-4921-915e-946b9f3188fb",
            "7a833d6f-0824-4f0e-b710-6de96bfe8f9d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3280,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0c046bee-715c-4b72-8d90-4f8b6ece0eb8",
      "title": "",
      "fullFile": "cypress\\tests\\components\\HeaderTest.js",
      "file": "cypress\\tests\\components\\HeaderTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d26e838c-1e6a-4e9f-b08a-5b1117a92661",
          "title": "Header Component Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test for brand logo",
              "fullTitle": "Header Component Test Test for brand logo",
              "timedOut": null,
              "duration": 1380,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "headerComp.brandLogo().should('contain.text', BRAND_TEXT);\nheaderComp.brandLogoImg().should('be.visible');",
              "err": {},
              "uuid": "c0e3d528-1632-4936-b9bf-cb2d486a38fe",
              "parentUUID": "d26e838c-1e6a-4e9f-b08a-5b1117a92661",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test for header menu",
              "fullTitle": "Header Component Test Test for header menu",
              "timedOut": null,
              "duration": 724,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedMenuDetails = [{\n  \"text\": \"Home (current)\",\n  \"href\": \"index.html\"\n}, {\n  \"text\": \"Contact\",\n  \"href\": \"#\"\n}, {\n  \"text\": \"About us\",\n  \"href\": \"#\"\n}, {\n  \"text\": \"Cart\",\n  \"href\": \"cart.html\"\n}, {\n  \"text\": \"Log in\",\n  \"href\": \"#\"\n}, {\n  \"text\": \"Sign up\",\n  \"href\": \"#\"\n}];\nheaderComp.getMenuDetails().then(actualMenuDetails => {\n  cy.wrap('').then(() => {\n    expect(actualMenuDetails).to.be.deep.equal(expectedMenuDetails);\n  });\n});",
              "err": {},
              "uuid": "83f16040-4d3a-46cc-b318-e07c5e731d3e",
              "parentUUID": "d26e838c-1e6a-4e9f-b08a-5b1117a92661",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0e3d528-1632-4936-b9bf-cb2d486a38fe",
            "83f16040-4d3a-46cc-b318-e07c5e731d3e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2104,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6a2989a5-e65c-4ff6-9e15-f59ae85c0292",
      "title": "",
      "fullFile": "cypress\\tests\\components\\HomePageCategoryTest.js",
      "file": "cypress\\tests\\components\\HomePageCategoryTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ce6e773d-7980-4d4c-9223-7785d213bfb7",
          "title": "Home Page Category Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to filter phone products",
              "fullTitle": "Home Page Category Test Should be able to filter phone products",
              "timedOut": null,
              "duration": 3611,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyCategoryFilterBy(`${product}`);",
              "err": {},
              "uuid": "dedb94a2-fcb7-42be-b118-8268470d92e3",
              "parentUUID": "ce6e773d-7980-4d4c-9223-7785d213bfb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to filter notebook products",
              "fullTitle": "Home Page Category Test Should be able to filter notebook products",
              "timedOut": null,
              "duration": 3158,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyCategoryFilterBy(`${product}`);",
              "err": {},
              "uuid": "a9e5ec50-5279-49b1-98dd-4fa1945a60cf",
              "parentUUID": "ce6e773d-7980-4d4c-9223-7785d213bfb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to filter monitor products",
              "fullTitle": "Home Page Category Test Should be able to filter monitor products",
              "timedOut": null,
              "duration": 1943,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyCategoryFilterBy(`${product}`);",
              "err": {},
              "uuid": "36104640-13bf-467e-9cf8-d9baa3386115",
              "parentUUID": "ce6e773d-7980-4d4c-9223-7785d213bfb7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dedb94a2-fcb7-42be-b118-8268470d92e3",
            "a9e5ec50-5279-49b1-98dd-4fa1945a60cf",
            "36104640-13bf-467e-9cf8-d9baa3386115"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8712,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "868b482c-1e9b-4685-8b4f-fc78ce055da9",
      "title": "",
      "fullFile": "cypress\\tests\\components\\ProductDetailTest.js",
      "file": "cypress\\tests\\components\\ProductDetailTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "79a8b2a0-53f3-411c-ab4e-351cb41c1e2b",
          "title": "Product Component Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to verify product details",
              "fullTitle": "Product Component Test should be able to verify product details",
              "timedOut": null,
              "duration": 7652,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_HomePageAPI.HomePageAPI.getHomePageProduct().then(apiData => {\n  const ranDomProduct = apiData[Math.floor(Math.random() * apiData.length)];\n  const ranDomProductTitle = ranDomProduct.title.trim().replace(\"\\n\", \"\");\n  cy.contains(ranDomProductTitle).click();\n  const productDetails = new _ProductDetailComponent.default();\n  productDetails.getProductImg().should('be.visible');\n  productDetails.getProductName().should('be.visible', ranDomProductTitle);\n  productDetails.getProductPrice().should('contain.text', ranDomProduct.price);\n  productDetails.getProductDescription().should('not.be.empty');\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `entries`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `entries`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (https://demoblaze.com/__cypress/runner/cypress_runner.js:164252:18)\n    at Object.errByPath (https://demoblaze.com/__cypress/runner/cypress_runner.js:164307:10)\n    at checkForXhr (https://demoblaze.com/__cypress/runner/cypress_runner.js:151203:92)\n    at <unknown> (https://demoblaze.com/__cypress/runner/cypress_runner.js:151226:28)\n    at tryCatcher (https://demoblaze.com/__cypress/runner/cypress_runner.js:18744:23)\n    at Promise.attempt.Promise.try (https://demoblaze.com/__cypress/runner/cypress_runner.js:16018:29)\n    at whenStable (https://demoblaze.com/__cypress/runner/cypress_runner.js:156168:65)\n    at <unknown> (https://demoblaze.com/__cypress/runner/cypress_runner.js:155609:14)\n    at tryCatcher (https://demoblaze.com/__cypress/runner/cypress_runner.js:18744:23)\n    at Promise._settlePromiseFromHandler (https://demoblaze.com/__cypress/runner/cypress_runner.js:16679:31)\n    at Promise._settlePromise (https://demoblaze.com/__cypress/runner/cypress_runner.js:16736:18)\n    at Promise._settlePromise0 (https://demoblaze.com/__cypress/runner/cypress_runner.js:16781:10)\n    at Promise._settlePromises (https://demoblaze.com/__cypress/runner/cypress_runner.js:16861:18)\n    at Promise._fulfill (https://demoblaze.com/__cypress/runner/cypress_runner.js:16805:18)\n    at <unknown> (https://demoblaze.com/__cypress/runner/cypress_runner.js:18419:46)\nFrom Your Spec Code:\n    at HomePageAPI._waitForHomePageLoaded (webpack:///./cypress/support/HomePageAPI.js:16:11)\n    at HomePageAPI.getHomePageProduct (webpack:///./cypress/support/HomePageAPI.js:6:13)\n    at Context.eval (webpack:///./cypress/tests/components/ProductDetailTest.js:11:16)",
                "diff": null
              },
              "uuid": "31bd00aa-ebb2-4e86-baeb-69e17c3f3c3a",
              "parentUUID": "79a8b2a0-53f3-411c-ab4e-351cb41c1e2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "31bd00aa-ebb2-4e86-baeb-69e17c3f3c3a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7652,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bdc517d7-4e29-4826-9584-794d1902f3bc",
      "title": "",
      "fullFile": "cypress\\tests\\order\\OrderItem.js",
      "file": "cypress\\tests\\order\\OrderItem.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aa7a9df1-7af5-4603-8352-5b0a554fb0db",
          "title": "Product Component Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "oder item as guest",
              "fullTitle": "Product Component Test oder item as guest",
              "timedOut": null,
              "duration": 12308,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "purchaseItem();",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.sweet-alert h2`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.sweet-alert h2`, but never found it.\n    at Context.eval (webpack:///./cypress/tests/order/OrderItem.js:64:30)",
                "diff": null
              },
              "uuid": "348cc600-0d7e-4087-b48a-365af8735216",
              "parentUUID": "aa7a9df1-7af5-4603-8352-5b0a554fb0db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "oder item as user",
              "fullTitle": "Product Component Test oder item as user",
              "timedOut": null,
              "duration": 10513,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const LOGIN_CRED = {\n  username: \"tun\",\n  password: \"admin\"\n};\nconst {\n  username,\n  password\n} = LOGIN_CRED;\nlogin(username, password);\npurchaseItem();",
              "err": {},
              "uuid": "f3247e8b-8933-4aa3-a520-6e9d20b92812",
              "parentUUID": "aa7a9df1-7af5-4603-8352-5b0a554fb0db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3247e8b-8933-4aa3-a520-6e9d20b92812"
          ],
          "failures": [
            "348cc600-0d7e-4087-b48a-365af8735216"
          ],
          "pending": [],
          "skipped": [],
          "duration": 22821,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "73cb783c-2061-42ce-8e04-e2c2d75f3d34",
      "title": "",
      "fullFile": "cypress\\tests\\signup\\SignUpTest.js",
      "file": "cypress\\tests\\signup\\SignUpTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "97e4e4d9-b8b1-41ad-8180-3fdf13f783f5",
          "title": "Sign Up Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to create a new user",
              "fullTitle": "Sign Up Test should be able to create a new user",
              "timedOut": null,
              "duration": 3076,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  username,\n  password\n} = SIGN_UP_CRED;\nsignUp(username, password);\ncy.on('window:alert', alert => {\n  expect(alert).to.contains(\"Sign up successful.\");\n});",
              "err": {},
              "uuid": "33ddaee5-e6a7-4967-a467-bec736fe1e0a",
              "parentUUID": "97e4e4d9-b8b1-41ad-8180-3fdf13f783f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to see existing user",
              "fullTitle": "Sign Up Test should be able to see existing user",
              "timedOut": null,
              "duration": 1337,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  password\n} = SIGN_UP_CRED;\nsignUp(\"tun\", password);\ncy.on('window:alert', alert => {\n  expect(alert).to.contains(\"This user already exist.\");\n});",
              "err": {},
              "uuid": "94e50572-6b56-456c-86d7-c7817b25c5f9",
              "parentUUID": "97e4e4d9-b8b1-41ad-8180-3fdf13f783f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33ddaee5-e6a7-4967-a467-bec736fe1e0a",
            "94e50572-6b56-456c-86d7-c7817b25c5f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4413,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d48fbcae-cd90-4711-beb0-98f1c4d086aa",
      "title": "",
      "fullFile": "cypress\\tests\\authen\\LoginTest.js",
      "file": "cypress\\tests\\authen\\LoginTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6414cee7-95ad-4da5-a3f8-a04250dd29b3",
          "title": "Login Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to login with correct cred",
              "fullTitle": "Login Test should be able to login with correct cred",
              "timedOut": null,
              "duration": 6340,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  username,\n  password\n} = LOGIN_CRED;\nlogin(username, password);\nheaderComp.getLoggedUsername().should('be.visible');\nheaderComp.getLoggedUsername().should('contain.text', `Welcome ${LOGIN_CRED.username}`);",
              "err": {},
              "uuid": "370a5f2f-20eb-4b15-a04d-5eb44223c595",
              "parentUUID": "6414cee7-95ad-4da5-a3f8-a04250dd29b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to see wrong username",
              "fullTitle": "Login Test should be able to see wrong username",
              "timedOut": null,
              "duration": 1417,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  username,\n  password\n} = LOGIN_CRED;\nlogin(username + \"_WRONG\", password);\ncy.on('window:alert', alert => {\n  expected(alert).to.contains(\"user does not exist.\");\n});",
              "err": {},
              "uuid": "d83249dc-dfa6-4d4c-b523-5f9d2d13875d",
              "parentUUID": "6414cee7-95ad-4da5-a3f8-a04250dd29b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to see wrong password",
              "fullTitle": "Login Test should be able to see wrong password",
              "timedOut": null,
              "duration": 1076,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const {\n  username,\n  password\n} = LOGIN_CRED;\nlogin(username, password + \"_WRONG\");\ncy.on('window:alert', alert => {\n  expect(alert).to.contains(\"Wrong password.\");\n});",
              "err": {},
              "uuid": "cf3165ab-8a80-43f6-a1fc-21390da27c7a",
              "parentUUID": "6414cee7-95ad-4da5-a3f8-a04250dd29b3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "370a5f2f-20eb-4b15-a04d-5eb44223c595",
            "d83249dc-dfa6-4d4c-b523-5f9d2d13875d",
            "cf3165ab-8a80-43f6-a1fc-21390da27c7a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8833,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}